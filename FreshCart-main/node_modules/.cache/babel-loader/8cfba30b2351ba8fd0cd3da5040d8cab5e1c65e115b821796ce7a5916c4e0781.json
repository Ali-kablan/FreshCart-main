{"ast":null,"code":"// Centralized currency formatting for Libyan Dinar\nexport const CURRENCY = \"LYD\"; // Standard ISO code for Libyan dinar\nexport const LOCALE = \"en-LY\"; // Use Arabic/English Libya as needed\n\nexport function formatCurrency(value) {\n  if (value == null || isNaN(Number(value))) return \"\";\n  try {\n    return new Intl.NumberFormat(LOCALE, {\n      style: \"currency\",\n      currency: CURRENCY,\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2\n    }).format(Number(value));\n  } catch (e) {\n    // Fallback simple format\n    return `${Number(value).toFixed(0)} ${CURRENCY}`;\n  }\n}","map":{"version":3,"names":["CURRENCY","LOCALE","formatCurrency","value","isNaN","Number","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","e","toFixed"],"sources":["C:/Users/keplo/Downloads/FreshCart-main/FreshCart-main/src/utils/currency.js"],"sourcesContent":["// Centralized currency formatting for Libyan Dinar\r\nexport const CURRENCY = \"LYD\"; // Standard ISO code for Libyan dinar\r\nexport const LOCALE = \"en-LY\"; // Use Arabic/English Libya as needed\r\n\r\nexport function formatCurrency(value) {\r\n  if (value == null || isNaN(Number(value))) return \"\";\r\n  try {\r\n    return new Intl.NumberFormat(LOCALE, {\r\n      style: \"currency\",\r\n      currency: CURRENCY,\r\n      minimumFractionDigits: 0,\r\n      maximumFractionDigits: 2,\r\n    }).format(Number(value));\r\n  } catch (e) {\r\n    // Fallback simple format\r\n    return `${Number(value).toFixed(0)} ${CURRENCY}`;\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,QAAQ,GAAG,KAAK,CAAC,CAAC;AAC/B,OAAO,MAAMC,MAAM,GAAG,OAAO,CAAC,CAAC;;AAE/B,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAE;EACpC,IAAIA,KAAK,IAAI,IAAI,IAAIC,KAAK,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC,EAAE,OAAO,EAAE;EACpD,IAAI;IACF,OAAO,IAAIG,IAAI,CAACC,YAAY,CAACN,MAAM,EAAE;MACnCO,KAAK,EAAE,UAAU;MACjBC,QAAQ,EAAET,QAAQ;MAClBU,qBAAqB,EAAE,CAAC;MACxBC,qBAAqB,EAAE;IACzB,CAAC,CAAC,CAACC,MAAM,CAACP,MAAM,CAACF,KAAK,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOU,CAAC,EAAE;IACV;IACA,OAAQ,GAAER,MAAM,CAACF,KAAK,CAAC,CAACW,OAAO,CAAC,CAAC,CAAE,IAAGd,QAAS,EAAC;EAClD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}